import React, { useEffect, useState } from "react";
import ProgressBar from "./ProgressBar";
import { FaArrowRight } from "react-icons/fa";
import Select from "react-select";
import countries from "world-countries";
import { City } from "country-state-city";

const countryOptions = countries.map((country) => ({
    value: country.name.common, // –ö–æ–¥ –∫—Ä–∞—ó–Ω–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, UA, US)
    label: `${country.name.common} (${country.cca2})`, // –ù–∞–∑–≤–∞ –∫—Ä–∞—ó–Ω–∏
  }));

const questions = [
    {
      id: 1,
      key: "budget",
      question: "–Ø–∫–∏–π –≤–∞—à –±—é–¥–∂–µ—Ç –Ω–∞ –ø–æ–¥–æ—Ä–æ–∂?",
      type: "radio",
      options: [
        { value: "Less500", label: "–ú–µ–Ω—à–µ $500" },
        { value: "500to1000", label: "$500 - $1000" },
        { value: "1000to3000", label: "$1000 - $3000" },
        { value: "More3000", label: "–ë—ñ–ª—å—à–µ $3000" }
      ],
    },
    {
    id: 2,
    key: "duration",
    question: "–°–∫—ñ–ª—å–∫–∏ —Ç—Ä–∏–≤–∞—Ç–∏–º–µ –≤–∞—à–∞ –ø–æ–¥–æ—Ä–æ–∂?",
    type: "radio",
    options: [
      { value: "1to3", label: "1-3 –¥–Ω—ñ" },
      { value: "4to7", label: "4-7 –¥–Ω—ñ–≤" },
      { value: "8to14", label: "8-14 –¥–Ω—ñ–≤" },
      { value: "More14", label: "–ë—ñ–ª—å—à–µ 14 –¥–Ω—ñ–≤" }
    ]
  },
  // {
  //   id: 3,
  //   key: "vacationType",
  //   question: "–Ø–∫–∏–π —Ç–∏–ø –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –í–∞–º —Ü—ñ–∫–∞–≤–∏–π?",
  //   type: "checkbox",
  //   options: [
  //     { value: "beach", label: "üå¥ –ü–ª—è–∂–Ω–∏–π" },
  //     { value: "city", label: "üèôÔ∏è –ú—ñ—Å—å–∫–∏–π (–∫—É–ª—å—Ç—É—Ä–Ω–∏–π —Ç—É—Ä–∏–∑–º)" },
  //     { value: "mountains", label: "üèîÔ∏è –ì–æ—Ä–∏ / –∞–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫" },
  //     { value: "nature", label: "üåø –ï–∫–æ–ª–æ–≥—ñ—á–Ω–∏–π (–ø—Ä–∏—Ä–æ–¥–∞, —Å—ñ–ª—å—Å—å–∫–∏–π —Ç—É—Ä–∏–∑–º)" },
  //     { value: "amusementParks", label: "üé° –†–æ–∑–≤–∞–∂–∞–ª—å–Ω—ñ –ø–∞—Ä–∫–∏" },
  //     { value: "gastronomic", label: "üçΩÔ∏è –ì–∞—Å—Ç—Ä–æ–Ω–æ–º—ñ—á–Ω–∏–π —Ç—É—Ä" }
  //   ]
  // },
  // {
  //   id: 4,
  //   key: "departureCountry",
  //   question: "–Ø–∫–µ –≤–∞—à–µ –º—ñ—Å—Ü–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è? (–û–±–µ—Ä—ñ—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É –∫—Ä–∞—ó–Ω)",
  //   type: "select",
  // },
  // {
  //   id: 5,
  //   key: "priorityDestination",
  //   question: "–ß–∏ –º–∞—î—Ç–µ –≤–∏ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω—ñ –Ω–∞–ø—Ä—è–º–∫–∏?",
  //   type: "radio",
  //   options: [
  //     { value: "yes", label: "–¢–∞–∫, —è —Ö–æ—á—É –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ –ø–µ–≤–Ω—É –∫—Ä–∞—ó–Ω—É" },
  //     { value: "no", label: "–ù—ñ, —Ö–æ—á—É –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó" }
  //   ]
  // },
  // {
  //   id: 6,
  //   key: "transportation",
  //   question: "–Ø–∫–∏–π —Å–ø–æ—Å—ñ–± –ø–µ—Ä–µ—Å—É–≤–∞–Ω–Ω—è –≤–∞–º –ø—ñ–¥—Ö–æ–¥–∏—Ç—å?",
  //   type: "checkbox",
  //   options: [
  //     { value: "plane", label: "‚úàÔ∏è –õ—ñ—Ç–∞–∫" },
  //     { value: "train", label: "üöÜ –ü–æ—Ç—è–≥" },
  //     { value: "bus", label: "üöå –ê–≤—Ç–æ–±—É—Å" },
  //     { value: "cruise", label: "‚õµ –ö—Ä—É—ó–∑" },
  //     { value: "car", label: "üöó –ê–≤—Ç–æ (–æ—Ä–µ–Ω–¥–æ–≤–∞–Ω–µ —á–∏ —Å–≤–æ—î)" }
  //   ]
  // },
  // {
  //   id: 7,
  //   key: "accommodation",
  //   question: "–Ø–∫–∏–π —Ç–∏–ø –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è –≤–∞–º –ø—ñ–¥—Ö–æ–¥–∏—Ç—å?",
  //   type: "radio",
  //   options: [
  //     { value: "hotel", label: "üè® –ì–æ—Ç–µ–ª—å" },
  //     { value: "airbnb", label: "üè° –û—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä (Airbnb)" },
  //     { value: "camping", label: "‚õ∫ –ö–µ–º–ø—ñ–Ω–≥" },
  //     { value: "hostel", label: "üõå –•–æ—Å—Ç–µ–ª" },
  //     { value: "camper", label: "üöô –ü–æ–¥–æ—Ä–æ–∂ —É –∫–µ–º–ø–µ—Ä—ñ" }
  //   ]
  // },
  // {
  //   id: 8,
  //   key: "dietaryRestrictions",
  //   question: "–ß–∏ –º–∞—î—Ç–µ –≤–∏ –æ–±–º–µ–∂–µ–Ω–Ω—è —â–æ–¥–æ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è?",
  //   type: "radio",
  //   options: [
  //     { value: "noRestrictions", label: "–ù–µ–º–∞—î –æ–±–º–µ–∂–µ–Ω—å" },
  //     { value: "vegetarian", label: "–í–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—å–∫–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è" },
  //     { value: "vegan", label: "–í–µ–≥–∞–Ω—Å—å–∫–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è" },
  //     { value: "glutenFree", label: "–ë–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è" }
  //   ]
  // },
  // {
  //   id: 9,
  //   key: "activities",
  //   question: "–Ø–∫—ñ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤–∞—Å —Ü—ñ–∫–∞–≤–ª—è—Ç—å?",
  //   type: "checkbox",
  //   options: [
  //     { value: "museums", label: "üé® –ú—É–∑–µ—ó, –≤–∏—Å—Ç–∞–≤–∫–∏, —ñ—Å—Ç–æ—Ä–∏—á–Ω—ñ –º—ñ—Å—Ü—è" },
  //     { value: "waterSports", label: "üèÑ‚Äç‚ôÇÔ∏è –í–æ–¥–Ω—ñ –≤–∏–¥–∏ —Å–ø–æ—Ä—Ç—É" },
  //     { value: "theater", label: "üé≠ –¢–µ–∞—Ç—Ä–∏, –∫–æ–Ω—Ü–µ—Ä—Ç–∏, —Ñ–µ—Å—Ç–∏–≤–∞–ª—ñ" },
  //     { value: "hiking", label: "üèïÔ∏è –ü—ñ—à—ñ –ø–æ—Ö–æ–¥–∏, –µ–∫–æ—Ç—É—Ä–∏–∑–º" },
  //     { value: "shopping", label: "üõçÔ∏è –®–æ–ø—ñ–Ω–≥" },
  //     { value: "wineTasting", label: "üç∑ –î–µ–≥—É—Å—Ç–∞—Ü—ñ—ó –≤–∏–Ω/–ª–æ–∫–∞–ª—å–Ω–æ—ó —ó–∂—ñ" },
  //     { value: "extremeSports", label: "üèéÔ∏è –ï–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ñ —Ä–æ–∑–≤–∞–≥–∏ (–ø–∞—Ä–∞—à—É—Ç–Ω–∏–π —Å–ø–æ—Ä—Ç, –∞–≤—Ç–æ–≥–æ–Ω–∫–∏)" }
  //   ]
  // },
  // {
  //   id: 10,
  //   key: "travelWithKids",
  //   question: "–ß–∏ –ø–æ–¥–æ—Ä–æ–∂—É—î—Ç–µ –≤–∏ –∑ –¥—ñ—Ç—å–º–∏?",
  //   type: "radio",
  //   options: [
  //     { value: "yes", label: "–¢–∞–∫" },
  //     { value: "no", label: "–ù—ñ" }
  //   ]
  // },
  // {
  //   id: 11,
  //   key: "comfortLevel",
  //   question: "–Ø–∫–∏–π —Ä—ñ–≤–µ–Ω—å –∫–æ–º—Ñ–æ—Ä—Ç—É –≤–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω?",
  //   type: "radio",
  //   options: [
  //     { value: "econom", label: "üí∞ –ë—é–¥–∂–µ—Ç–Ω–∏–π" },
  //     { value: "comfortable", label: "üíé –ö–æ–º—Ñ–æ—Ä—Ç–Ω–∏–π" },
  //     { value: "luxury", label: "üëë –õ—é–∫—Å" }
  //   ]
  // },
  // {
  //   id: 12,
  //   key: "season",
  //   question: "–ö–æ–ª–∏ –≤–∏ –ø–ª–∞–Ω—É—î—Ç–µ –ø–æ–¥–æ—Ä–æ–∂?",
  //   type: "radio",
  //   options: [
  //     { value: "winter", label: "‚ùÑÔ∏è –ó–∏–º–∞" },
  //     { value: "spring", label: "üå∏ –í–µ—Å–Ω–∞" },
  //     { value: "summer", label: "‚òÄÔ∏è –õ—ñ—Ç–æ" },
  //     { value: "autumn", label: "üçÇ –û—Å—ñ–Ω—å" },
  //     { value: "anytime", label: "üìÖ –ë—É–¥—å-–∫–æ–ª–∏" }
  //   ]
  // },
  // {
  //   id: 13,
  //   key: "localEvents",
  //   question: "–ß–∏ —Ö–æ—á–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç–∏ —É –º–∞—Ä—à—Ä—É—Ç –º—ñ—Å—Ü–µ–≤—ñ —Å–≤—è—Ç–∞ —Ç–∞ –ø–æ–¥—ñ—ó?",
  //   type: "radio",
  //   options: [
  //     { value: "yes", label: "–¢–∞–∫" },
  //     { value: "no", label: "–ù—ñ" }
  //   ]
  // },
     
];

const QuestionForm = (props) => {
  const {onComplete} = props;

  const [step, setStep] = useState(0);
  const [answers, setAnswers] = useState(() =>
    Object.fromEntries(questions.map((q) => [q.id, ""]))
  );

  const handleSubmit = () => {
    onComplete(answers);
  };
 
  const handleNext = () => {
    if (questions[step].id === 5) {
        if (answers[5] === "–¢–∞–∫, —è —Ö–æ—á—É –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ –ø–µ–≤–Ω—É –∫—Ä–∞—ó–Ω—É" && !answers[5.1]) {
            return; // –ù–µ –¥–∞—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞—Ç–∏ "–î–∞–ª—ñ", —è–∫—â–æ –Ω–µ –æ–±—Ä–∞–ª–∏ –∫—Ä–∞—ó–Ω—É
        }
    }
    setStep(step + 1); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è
};

const handleSelect = (option) => {
  const currentQuestion = questions[step];

  if (currentQuestion.type === "checkbox") {
      setAnswers((prev) => {
          const prevAnswers = prev[currentQuestion.id] || [];
          return {
              ...prev,
              [currentQuestion.id]: prevAnswers.includes(option)
                  ? prevAnswers.filter((item) => item !== option) // –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤–∏–±–æ—Ä—É
                  : [...prevAnswers, option], // –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏–±–æ—Ä—É
          };
      });
  } else {
      let newAnswers = { ...answers, [currentQuestion.id]: option };


      // –Ø–∫—â–æ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ "–ù—ñ" –≤ 5-–º—É –ø–∏—Ç–∞–Ω–Ω—ñ ‚Üí –≤–∏–¥–∞–ª—è—î–º–æ –≤–∏–±—ñ—Ä –∫—Ä–∞—ó–Ω–∏
      if (currentQuestion.id === 5 && option === "–ù—ñ, —Ö–æ—á—É –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó") {
          newAnswers[6] = ""; // –í–∏–¥–∞–ª—è—î–º–æ –∫—Ä–∞—ó–Ω—É
      }

      setAnswers(newAnswers);
  }
};

  return (
    <div id="question-form" className="w-full max-w-3xl mx-auto p-8 bg-white rounded-lg shadow-lg border border-gray-200">
      <ProgressBar step={step} totalSteps={questions.length} />

      {/* –ü–∏—Ç–∞–Ω–Ω—è */}
      <h2 className="text-2xl font-bold mb-4">{questions[step].question}</h2>
      <p className="text-sm text-gray-400 mb-4">
        {questions[step].type === "checkbox"
            ? "*–º–æ–∂–Ω–∞ –≤–∏–±—Ä–∞—Ç–∏ –∫—ñ–ª—å–∫–∞ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤"
            : "*–æ–±–µ—Ä—ñ—Ç—å –ª–∏—à–µ –æ–¥–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å"}
        </p>
        <div className="grid grid-cols-2 gap-4">
            {questions[step].type === "select" ? ( // –Ø–∫—â–æ —Ü–µ –ø–∏—Ç–∞–Ω–Ω—è –∑ –≤–∏–ø–∞–¥–∞—é—á–∏–º —Å–ø–∏—Å–∫–æ–º
                <Select
                options={countryOptions}
                className="w-full"
                placeholder="–û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É..."
                value={countryOptions.find(option => option.value === answers[questions[step].id])}
                onChange={(selectedOption) => setAnswers({ ...answers, [questions[step].id]: selectedOption.value })}
                isSearchable={true} // –ê–≤—Ç–æ—Ñ—ñ–ª—å—Ç—Ä
                noOptionsMessage={() => "–ö—Ä–∞—ó–Ω—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"} // –¢–µ–∫—Å—Ç, —è–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
            />  
            ) : (
                // –†–µ–Ω–¥–µ—Ä–∏–º–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –¥–ª—è radio/checkbox
                questions[step].options.map((option, index) => (
                <label key={index} className="btn btn-outline flex items-center justify-start text-left w-full h-15 px-5 gap-2">
                    <input
                    type={questions[step].type === "radio" ? "radio" : "checkbox"}
                    name={`question-${questions[step].id}`}
                    className="w-5 h-5"
                    checked={answers[questions[step].id]?.includes(option.value)}
                    onChange={() => handleSelect(option.value)}
                    />
                    {option.label}
                </label>
                ))
            )}
        </div>

      {/* –í–∏–±—ñ—Ä –∫—Ä–∞—ó–Ω–∏ (–∑'—è–≤–ª—è—î—Ç—å—Å—è –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É "–¢–∞–∫") */}
      {questions[step].id === 5 && answers[5] === "–¢–∞–∫, —è —Ö–æ—á—É –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ –ø–µ–≤–Ω—É –∫—Ä–∞—ó–Ω—É" && (
        <Select
          options={countryOptions}
          className="w-full mt-4"
          placeholder="–û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É –¥–ª—è –ø–æ–¥–æ—Ä–æ–∂—ñ..."
          value={countryOptions.find(option => option.value === answers[6])}
          onChange={(selectedOption) => setAnswers({ ...answers, 5.1: selectedOption.value })}
          isSearchable={true}
        />
      )}

    <div className="flex justify-between items-center mt-6">
      {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
        <button
          onClick={() => setStep((prev) => Math.max(prev - 1, 0))}
          className="btn btn-primary text-white flex items-center px-6 py-3 mt-0"
          disabled={step === 0}
        >
        <FaArrowRight className="rotate-180 mr-2" /> –ù–∞–∑–∞–¥
      </button>

        {/* –ö–Ω–æ–ø–∫–∞ "–î–∞–ª—ñ" */}
      <button
        onClick={step === questions.length - 1 ? handleSubmit : handleNext} // –Ø–∫—â–æ –æ—Å—Ç–∞–Ω–Ω—î –ø–∏—Ç–∞–Ω–Ω—è, –∑–∞–ø—É—Å–∫–∞—î–º–æ handleSubmit
        className="btn btn-primary text-white flex items-center px-6 py-3"
        disabled={!answers[questions[step].id]} // –í–∏–º–∏–∫–∞—î–º–æ, —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ –≤–∏–±—Ä–∞–Ω–∞
      >
        {step === questions.length - 1 ? "–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ–¥–æ—Ä–æ–∂" : "–î–∞–ª—ñ"}
        <FaArrowRight className="ml-2" />
      </button>
    </div>

      </div>
      
  );
};

export default QuestionForm;